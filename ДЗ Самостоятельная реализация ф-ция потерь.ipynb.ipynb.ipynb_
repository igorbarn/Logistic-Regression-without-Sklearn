{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1_GlBLxNIfaV7yEkuq1OcCk7xr8NJz2z0","timestamp":1685972058091}],"collapsed_sections":["xR1367FGbc6r","Z6i6bSVYdZSL","VAvxPo5jx_S8","y31eW5JPw6Y0"],"toc_visible":true,"authorship_tag":"ABX9TyOVR3p9BjGPkcpjSNW7GT16"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Вариант 1. Логистическая регрессия с использованием библиотеки sklearn"],"metadata":{"id":"xR1367FGbc6r"}},{"cell_type":"markdown","source":["#### Получение датафрейма."],"metadata":{"id":"RUQ55kvybvlK"}},{"cell_type":"code","source":["# Импорт этих библиотек наверное нужно вынести наверх.\n","\n","import numpy as np\n","import pandas as pd # Для работы с данными\n","import scipy.stats # При работе со статистикой\n","import matplotlib.pyplot as plt  # Библиотека для визуализации результатов "],"metadata":{"id":"IM141HPIb5zi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"rf2DWoS-b52S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.datasets import load_iris"],"metadata":{"id":"vJfdhRM8b556"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# https://www.stackvidhya.com/convert-sklearn-dataset-to-pandas-dataframe-in-python/\n","iris = load_iris()"],"metadata":{"id":"JIt5MTdhcM0z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["names = [\n","    'sl', # sepal length (cm)\n","    'sw', # sepal width (cm)\n","    'pl', # petal length (cm)\n","    'pw'  # petal width (cm)\n","]"],"metadata":{"id":"kdgKyGdXcM4L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_sk = pd.DataFrame(data=iris.data, columns=names)"],"metadata":{"id":"ArCheZC2cM7_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_sk.insert(loc=0, column='one', value=1)\n","data_sk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0FRVyfa9cbkk","executionInfo":{"status":"ok","timestamp":1685874414147,"user_tz":-420,"elapsed":8,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"f433122b-7069-4670-c9ad-499e37b5fadb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw\n","0      1  5.1  3.5  1.4  0.2\n","1      1  4.9  3.0  1.4  0.2\n","2      1  4.7  3.2  1.3  0.2\n","3      1  4.6  3.1  1.5  0.2\n","4      1  5.0  3.6  1.4  0.2\n","..   ...  ...  ...  ...  ...\n","145    1  6.7  3.0  5.2  2.3\n","146    1  6.3  2.5  5.0  1.9\n","147    1  6.5  3.0  5.2  2.0\n","148    1  6.2  3.4  5.4  2.3\n","149    1  5.9  3.0  5.1  1.8\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-b48f4480-e745-48fc-822c-ac921a4e14f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b48f4480-e745-48fc-822c-ac921a4e14f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b48f4480-e745-48fc-822c-ac921a4e14f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b48f4480-e745-48fc-822c-ac921a4e14f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data_sk.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b5BVVbSQcbnR","executionInfo":{"status":"ok","timestamp":1685874414147,"user_tz":-420,"elapsed":7,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"1b725b96-132f-442c-e811-272308c9bebd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(150, 5)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data_sk[\"class\"] = iris.target\n","data_sk\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w6e4DCZ1cbpz","executionInfo":{"status":"ok","timestamp":1685874414147,"user_tz":-420,"elapsed":7,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"eb58f5be-89ae-471d-9b8d-496b96243777"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw  class\n","0      1  5.1  3.5  1.4  0.2      0\n","1      1  4.9  3.0  1.4  0.2      0\n","2      1  4.7  3.2  1.3  0.2      0\n","3      1  4.6  3.1  1.5  0.2      0\n","4      1  5.0  3.6  1.4  0.2      0\n","..   ...  ...  ...  ...  ...    ...\n","145    1  6.7  3.0  5.2  2.3      2\n","146    1  6.3  2.5  5.0  1.9      2\n","147    1  6.5  3.0  5.2  2.0      2\n","148    1  6.2  3.4  5.4  2.3      2\n","149    1  5.9  3.0  5.1  1.8      2\n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-f484669d-fb3c-4523-b608-eb41e8c05faa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f484669d-fb3c-4523-b608-eb41e8c05faa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f484669d-fb3c-4523-b608-eb41e8c05faa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f484669d-fb3c-4523-b608-eb41e8c05faa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data_sk['class'] = data_sk['class'].astype('int64')"],"metadata":{"id":"HaCcq06Zcbsk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Нормализация датафрейма."],"metadata":{"id":"hsqHIjxLjBMj"}},{"cell_type":"code","source":["data_sk.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"m2uiwdr_e7CE","executionInfo":{"status":"ok","timestamp":1685874416910,"user_tz":-420,"elapsed":328,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"e2be7fcb-1e30-45dc-a55c-bab453e63933"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         one          sl          sw          pl          pw       class\n","count  150.0  150.000000  150.000000  150.000000  150.000000  150.000000\n","mean     1.0    5.843333    3.057333    3.758000    1.199333    1.000000\n","std      0.0    0.828066    0.435866    1.765298    0.762238    0.819232\n","min      1.0    4.300000    2.000000    1.000000    0.100000    0.000000\n","25%      1.0    5.100000    2.800000    1.600000    0.300000    0.000000\n","50%      1.0    5.800000    3.000000    4.350000    1.300000    1.000000\n","75%      1.0    6.400000    3.300000    5.100000    1.800000    2.000000\n","max      1.0    7.900000    4.400000    6.900000    2.500000    2.000000"],"text/html":["\n","  <div id=\"df-bbb93459-f024-4d2f-853b-554f89f0c9e8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>150.0</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.0</td>\n","      <td>5.843333</td>\n","      <td>3.057333</td>\n","      <td>3.758000</td>\n","      <td>1.199333</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.0</td>\n","      <td>0.828066</td>\n","      <td>0.435866</td>\n","      <td>1.765298</td>\n","      <td>0.762238</td>\n","      <td>0.819232</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.0</td>\n","      <td>4.300000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.0</td>\n","      <td>5.100000</td>\n","      <td>2.800000</td>\n","      <td>1.600000</td>\n","      <td>0.300000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.0</td>\n","      <td>5.800000</td>\n","      <td>3.000000</td>\n","      <td>4.350000</td>\n","      <td>1.300000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.0</td>\n","      <td>6.400000</td>\n","      <td>3.300000</td>\n","      <td>5.100000</td>\n","      <td>1.800000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.0</td>\n","      <td>7.900000</td>\n","      <td>4.400000</td>\n","      <td>6.900000</td>\n","      <td>2.500000</td>\n","      <td>2.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbb93459-f024-4d2f-853b-554f89f0c9e8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bbb93459-f024-4d2f-853b-554f89f0c9e8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bbb93459-f024-4d2f-853b-554f89f0c9e8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Столбцы для стандартизации\n","data_sta = data_sk[['sl', 'sw', 'pl', 'pw']]\n","\n","#standardize the values for each predictor variable\n","data_sk[['sl', 'sw', 'pl', 'pw']] = (data_sta - data_sta.mean())/data_sta.std()"],"metadata":{"id":"dqAbnqUIfj20"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_sk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Qx75G_bzgTZT","executionInfo":{"status":"ok","timestamp":1685874423818,"user_tz":-420,"elapsed":392,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"e974a6f2-2362-44b9-e708-7048cce8fc45"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one        sl        sw        pl        pw  class\n","0      1 -0.897674  1.015602 -1.335752 -1.311052      0\n","1      1 -1.139200 -0.131539 -1.335752 -1.311052      0\n","2      1 -1.380727  0.327318 -1.392399 -1.311052      0\n","3      1 -1.501490  0.097889 -1.279104 -1.311052      0\n","4      1 -1.018437  1.245030 -1.335752 -1.311052      0\n","..   ...       ...       ...       ...       ...    ...\n","145    1  1.034539 -0.131539  0.816859  1.443994      2\n","146    1  0.551486 -1.278680  0.703564  0.919223      2\n","147    1  0.793012 -0.131539  0.816859  1.050416      2\n","148    1  0.430722  0.786174  0.930154  1.443994      2\n","149    1  0.068433 -0.131539  0.760211  0.788031      2\n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-7d0b41e5-fd48-466a-a171-e956aa79cf35\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>-0.897674</td>\n","      <td>1.015602</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-1.139200</td>\n","      <td>-0.131539</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>-1.380727</td>\n","      <td>0.327318</td>\n","      <td>-1.392399</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>-1.501490</td>\n","      <td>0.097889</td>\n","      <td>-1.279104</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>-1.018437</td>\n","      <td>1.245030</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>1.034539</td>\n","      <td>-0.131539</td>\n","      <td>0.816859</td>\n","      <td>1.443994</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>0.551486</td>\n","      <td>-1.278680</td>\n","      <td>0.703564</td>\n","      <td>0.919223</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>0.793012</td>\n","      <td>-0.131539</td>\n","      <td>0.816859</td>\n","      <td>1.050416</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>0.430722</td>\n","      <td>0.786174</td>\n","      <td>0.930154</td>\n","      <td>1.443994</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>0.068433</td>\n","      <td>-0.131539</td>\n","      <td>0.760211</td>\n","      <td>0.788031</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d0b41e5-fd48-466a-a171-e956aa79cf35')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7d0b41e5-fd48-466a-a171-e956aa79cf35 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7d0b41e5-fd48-466a-a171-e956aa79cf35');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":[],"metadata":{"id":"oxNSWCye57Ak"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Среднее значение для каждого признака\n","data_sk[['sl', 'sw', 'pl', 'pw']].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d6SmueJogTjz","executionInfo":{"status":"ok","timestamp":1685874428370,"user_tz":-420,"elapsed":294,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"83e1f72a-7e45-4b8f-d0df-3ece5a28bf0f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sl   -1.515825e-15\n","sw   -1.894781e-15\n","pl   -1.515825e-15\n","pw   -8.526513e-16\n","dtype: float64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Стандартное отклонение для каждого признака\n","data_sk[['sl', 'sw', 'pl', 'pw']].std()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EOjXVhkfgq3j","executionInfo":{"status":"ok","timestamp":1685874429964,"user_tz":-420,"elapsed":399,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"2e5c789c-92dd-4182-8fa3-50437a1d5e18"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sl    1.0\n","sw    1.0\n","pl    1.0\n","pw    1.0\n","dtype: float64"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["#### Удаление ненужного класса цветов."],"metadata":{"id":"Z6i6bSVYdZSL"}},{"cell_type":"code","source":["data_sk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"uk2DC4syjZMq","executionInfo":{"status":"ok","timestamp":1685867834068,"user_tz":-420,"elapsed":310,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"521dc58e-c362-48bf-e9cb-44bbb72d104d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one        sl        sw        pl        pw  class\n","0      1 -0.897674  1.015602 -1.335752 -1.311052      0\n","1      1 -1.139200 -0.131539 -1.335752 -1.311052      0\n","2      1 -1.380727  0.327318 -1.392399 -1.311052      0\n","3      1 -1.501490  0.097889 -1.279104 -1.311052      0\n","4      1 -1.018437  1.245030 -1.335752 -1.311052      0\n","..   ...       ...       ...       ...       ...    ...\n","145    1  1.034539 -0.131539  0.816859  1.443994      2\n","146    1  0.551486 -1.278680  0.703564  0.919223      2\n","147    1  0.793012 -0.131539  0.816859  1.050416      2\n","148    1  0.430722  0.786174  0.930154  1.443994      2\n","149    1  0.068433 -0.131539  0.760211  0.788031      2\n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-3b4de3ec-452f-497c-a19c-abaee10ce32f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>-0.897674</td>\n","      <td>1.015602</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-1.139200</td>\n","      <td>-0.131539</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>-1.380727</td>\n","      <td>0.327318</td>\n","      <td>-1.392399</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>-1.501490</td>\n","      <td>0.097889</td>\n","      <td>-1.279104</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>-1.018437</td>\n","      <td>1.245030</td>\n","      <td>-1.335752</td>\n","      <td>-1.311052</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>1.034539</td>\n","      <td>-0.131539</td>\n","      <td>0.816859</td>\n","      <td>1.443994</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>0.551486</td>\n","      <td>-1.278680</td>\n","      <td>0.703564</td>\n","      <td>0.919223</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>0.793012</td>\n","      <td>-0.131539</td>\n","      <td>0.816859</td>\n","      <td>1.050416</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>0.430722</td>\n","      <td>0.786174</td>\n","      <td>0.930154</td>\n","      <td>1.443994</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>0.068433</td>\n","      <td>-0.131539</td>\n","      <td>0.760211</td>\n","      <td>0.788031</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b4de3ec-452f-497c-a19c-abaee10ce32f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b4de3ec-452f-497c-a19c-abaee10ce32f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b4de3ec-452f-497c-a19c-abaee10ce32f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Удаление ненужного класса цветков.\n","data_sk = data_sk.loc[((data_sk['class'] != 0))]"],"metadata":{"id":"W-Zoo8XAdNC7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Пометка для себя, однако буду признателен преподавателям, если\n","# подскажут что делать.\n","# С предупреждением - SettingWithCopyWarning\n","# так и не смог справиться. Не помогла и замечательная статья\n","# https://realpython.com/pandas-settingwithcopywarning/\n","# Самое простое решение , это - pd.options.mode.chained_assignment = None\n","data_sk['class'] = data_sk['class'] - 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5VjY7jLadNFb","executionInfo":{"status":"ok","timestamp":1685867842014,"user_tz":-420,"elapsed":290,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"21fbd8eb-6912-4873-ae8a-9fb1c6828561"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-19-8386cfc72938>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_sk['class'] = data_sk['class'] - 1\n"]}]},{"cell_type":"code","source":["# Провека количества классов и числа элементов в классе.\n","data_sk['class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"684nfxSFdNIL","executionInfo":{"status":"ok","timestamp":1685867902990,"user_tz":-420,"elapsed":331,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"b61e6afb-2151-47f7-e49f-fcc275c08e67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    50\n","1    50\n","Name: class, dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["#### Разделение на данные и значения."],"metadata":{"id":"IK_SB0kCpY_b"}},{"cell_type":"code","source":["X = data_sk[['one', 'sl', 'sw', 'pl', 'pw']].copy(); y = data_sk['class']"],"metadata":{"id":"n8NfwdgGplfj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X, y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HRG2fI4Ep0Sr","executionInfo":{"status":"ok","timestamp":1685869595160,"user_tz":-420,"elapsed":343,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"1884f7ae-3a02-4f97-e90f-648c58f0d74b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(     one        sl        sw        pl        pw\n"," 50     1  1.396829  0.327318  0.533621  0.263260\n"," 51     1  0.672249  0.327318  0.420326  0.394453\n"," 52     1  1.276066  0.097889  0.646916  0.394453\n"," 53     1 -0.414621 -1.737536  0.137087  0.132067\n"," 54     1  0.793012 -0.590395  0.476973  0.394453\n"," ..   ...       ...       ...       ...       ...\n"," 145    1  1.034539 -0.131539  0.816859  1.443994\n"," 146    1  0.551486 -1.278680  0.703564  0.919223\n"," 147    1  0.793012 -0.131539  0.816859  1.050416\n"," 148    1  0.430722  0.786174  0.930154  1.443994\n"," 149    1  0.068433 -0.131539  0.760211  0.788031\n"," \n"," [100 rows x 5 columns],\n"," 50     0\n"," 51     0\n"," 52     0\n"," 53     0\n"," 54     0\n","       ..\n"," 145    1\n"," 146    1\n"," 147    1\n"," 148    1\n"," 149    1\n"," Name: class, Length: 100, dtype: int64)"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["#### Разделение датафрейма на обучающую и тестовую выборку."],"metadata":{"id":"nRT6PTV0jv-D"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"ClHmb7vLdNKk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_sk, X_test_sk, y_train_sk, y_test_sk = train_test_split(X, y, \n","                                                    train_size=0.80, \n","                                                    random_state=42)"],"metadata":{"id":"5GVK3wlMcbvE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_sk, y_train_sk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMb3Uq93btbr","executionInfo":{"status":"ok","timestamp":1685869675872,"user_tz":-420,"elapsed":286,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"6f9ab703-0337-4aeb-9374-2a0d845bec1a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(     one        sl        sw        pl        pw\n"," 105    1  2.121409 -0.131539  1.609926  1.181609\n"," 138    1  0.189196 -0.131539  0.590269  0.788031\n"," 76     1  1.155302 -0.590395  0.590269  0.263260\n"," 92     1 -0.052331 -1.049251  0.137087  0.000875\n"," 119    1  0.189196 -1.966964  0.703564  0.394453\n"," ..   ...       ...       ...       ...       ...\n"," 110    1  0.793012  0.327318  0.760211  1.050416\n"," 121    1 -0.293857 -0.590395  0.646916  1.050416\n"," 64     1 -0.293857 -0.360967 -0.089503  0.132067\n"," 142    1 -0.052331 -0.819823  0.760211  0.919223\n"," 101    1 -0.052331 -0.819823  0.760211  0.919223\n"," \n"," [80 rows x 5 columns],\n"," 105    1\n"," 138    1\n"," 76     0\n"," 92     0\n"," 119    1\n","       ..\n"," 110    1\n"," 121    1\n"," 64     0\n"," 142    1\n"," 101    1\n"," Name: class, Length: 80, dtype: int64)"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["#### Создание модели."],"metadata":{"id":"Y1NM08SdqnlT"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","model = LogisticRegression()\n","model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"60QfVnxRpZ5T","executionInfo":{"status":"ok","timestamp":1685869782803,"user_tz":-420,"elapsed":403,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"7635c286-e11d-46ca-a441-ab840d88d66f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["model.fit(X_train_sk, y_train_sk)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"u1VWCf0xpZ8T","executionInfo":{"status":"ok","timestamp":1685869837576,"user_tz":-420,"elapsed":309,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"18b85f94-59f1-4ace-9520-b05ea4dea7d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["model.coef_, model.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lwQYOSF-pZ-7","executionInfo":{"status":"ok","timestamp":1685869855772,"user_tz":-420,"elapsed":285,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"502699ab-c56c-4d9b-cf3e-4a5032dd46bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[-1.80785255e-06,  2.43317856e-01, -7.67924528e-01,\n","          2.33741326e+00,  2.94545068e+00]]),\n"," array([-3.68830603]))"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["#### Предсказания модели."],"metadata":{"id":"5aHA2wlTruUT"}},{"cell_type":"code","source":["predictions = model.predict(X_test_sk)\n","predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fk5PYUIorvW0","executionInfo":{"status":"ok","timestamp":1685870074991,"user_tz":-420,"elapsed":297,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"59f0cc09-0d1a-4cad-d50b-a4673f822627"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["y_test_sk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nsHk2_XEsAQT","executionInfo":{"status":"ok","timestamp":1685870099889,"user_tz":-420,"elapsed":284,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"810a9b53-4d47-4048-f78c-bdf9d5c5c2cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["133    1\n","103    1\n","120    1\n","95     0\n","94     0\n","89     0\n","72     0\n","130    1\n","60     0\n","50     0\n","68     0\n","80     0\n","123    1\n","83     0\n","140    1\n","54     0\n","126    1\n","127    1\n","62     0\n","81     0\n","Name: class, dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Определение точности модели с помощью метода scope\n","score = model.score(X_test_sk, y_test_sk)\n","print(score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"byvCQQw5szY0","executionInfo":{"status":"ok","timestamp":1685870381742,"user_tz":-420,"elapsed":295,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"9377ebdd-26bd-4978-c92c-3ad76a56fcc3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8\n"]}]},{"cell_type":"markdown","source":["### Вариант 2. Самостоятельная реализация без нормализации и с нормализацией данных."],"metadata":{"id":"ZPuu9DOSak3f"}},{"cell_type":"markdown","source":["Использованы несколько источников.</br>\n","- [Нетология - Логистическая регрессия и SVM](https://colab.research.google.com/drive/1eWmwvET7m1zwIGmZGXkqkJ95g-YN70pG#scrollTo=nnAa7C6KG8m0)\n","- [machine learrrning - Логистическая регрессия](https://colab.research.google.com/drive/1X1snkbB93q2Egy7PQHoXAA3FLIeKelX5#scrollTo=Faqf8pG8itot)"],"metadata":{"id":"ae_EF8H9yCkH"}},{"cell_type":"code","source":["# Импорт этих библиотек наверное нужно вынести наверх.\n","\n","import numpy as np\n","import pandas as pd # Для работы с данными\n","import scipy.stats # При работе со статистикой\n","import matplotlib.pyplot as plt  # Библиотека для визуализации результатов "],"metadata":{"id":"0D01eDEgaoln"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Загрузка данных, создание датафрейма."],"metadata":{"id":"VAvxPo5jx_S8"}},{"cell_type":"code","source":["from sklearn.datasets import load_iris"],"metadata":{"id":"lQiTu1GE-lhi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# https://www.stackvidhya.com/convert-sklearn-dataset-to-pandas-dataframe-in-python/\n","iris = load_iris()\n"],"metadata":{"id":"qRKCEnLu7Y6I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Столбцы в данных имеют слишком длянные названия с пробелами.\n","# Названия столбцов нужно заменить на короткие.\n","names = [\n","    'sl', # sepal length (cm)\n","    'sw', # sepal width (cm)\n","    'pl', # petal length (cm)\n","    'pw'  # petal width (cm)\n","]"],"metadata":{"id":"pgnbhZflwLsz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_orig = pd.DataFrame(data=iris.data, columns=names)"],"metadata":{"id":"LqbJ2Gx8wy87"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" \n","data_orig.insert(loc=0, column='one', value=1)\n","data_orig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Xv6XRYrP4Ks9","executionInfo":{"status":"ok","timestamp":1685874454441,"user_tz":-420,"elapsed":368,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"a20ee68e-ee3a-44e0-ae5e-5974c28ed78e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw\n","0      1  5.1  3.5  1.4  0.2\n","1      1  4.9  3.0  1.4  0.2\n","2      1  4.7  3.2  1.3  0.2\n","3      1  4.6  3.1  1.5  0.2\n","4      1  5.0  3.6  1.4  0.2\n","..   ...  ...  ...  ...  ...\n","145    1  6.7  3.0  5.2  2.3\n","146    1  6.3  2.5  5.0  1.9\n","147    1  6.5  3.0  5.2  2.0\n","148    1  6.2  3.4  5.4  2.3\n","149    1  5.9  3.0  5.1  1.8\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-76f71615-f5ce-4ffb-b486-3971464f48ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76f71615-f5ce-4ffb-b486-3971464f48ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-76f71615-f5ce-4ffb-b486-3971464f48ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-76f71615-f5ce-4ffb-b486-3971464f48ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data_orig.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r4rcSrsNvTbU","executionInfo":{"status":"ok","timestamp":1685874458404,"user_tz":-420,"elapsed":286,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"8ad44afb-3078-4490-e21a-d190c50da786"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(150, 5)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data_orig[\"class\"] = iris.target"],"metadata":{"id":"9ulSpZnV-KDp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_orig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"CercHmF9-KGB","executionInfo":{"status":"ok","timestamp":1685874461251,"user_tz":-420,"elapsed":8,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"f4ac5c6d-8f02-4d7b-f1f8-68986a898fb1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw  class\n","0      1  5.1  3.5  1.4  0.2      0\n","1      1  4.9  3.0  1.4  0.2      0\n","2      1  4.7  3.2  1.3  0.2      0\n","3      1  4.6  3.1  1.5  0.2      0\n","4      1  5.0  3.6  1.4  0.2      0\n","..   ...  ...  ...  ...  ...    ...\n","145    1  6.7  3.0  5.2  2.3      2\n","146    1  6.3  2.5  5.0  1.9      2\n","147    1  6.5  3.0  5.2  2.0      2\n","148    1  6.2  3.4  5.4  2.3      2\n","149    1  5.9  3.0  5.1  1.8      2\n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b11dacc7-2cea-4f8d-bd1c-4c491b9c0473\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b11dacc7-2cea-4f8d-bd1c-4c491b9c0473')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b11dacc7-2cea-4f8d-bd1c-4c491b9c0473 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b11dacc7-2cea-4f8d-bd1c-4c491b9c0473');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data_orig['class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nxg-itvf-KIy","executionInfo":{"status":"ok","timestamp":1685874464588,"user_tz":-420,"elapsed":390,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"280fdcfe-42bd-4bcf-96d8-1c191a7be88d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    50\n","1    50\n","2    50\n","Name: class, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data_orig['class'] = data_orig['class'].astype('int64')"],"metadata":{"id":"3bH78pP_qEIM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_orig.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6yIQxQQOqFy0","executionInfo":{"status":"ok","timestamp":1685874465964,"user_tz":-420,"elapsed":2,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"9737d26a-0285-430f-d523-24f905880cf7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 150 entries, 0 to 149\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   one     150 non-null    int64  \n"," 1   sl      150 non-null    float64\n"," 2   sw      150 non-null    float64\n"," 3   pl      150 non-null    float64\n"," 4   pw      150 non-null    float64\n"," 5   class   150 non-null    int64  \n","dtypes: float64(4), int64(2)\n","memory usage: 7.2 KB\n"]}]},{"cell_type":"markdown","source":["#### Удаление ненужного класса цветов."],"metadata":{"id":"y31eW5JPw6Y0"}},{"cell_type":"code","source":["# Удаление ненужного класса цветков.\n","data_orig = data_orig.loc[((data_orig['class'] != 0))]"],"metadata":{"id":"aHxX7XsjxHZr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Пометка для себя, однако буду признателен преподавателям, если\n","# подскажут что делать.\n","# С предупреждением - SettingWithCopyWarning\n","# так и не смог справиться. Не помогла и замечательная статья\n","# https://realpython.com/pandas-settingwithcopywarning/\n","# Самое простое решение , это - pd.options.mode.chained_assignment = None\n","data_orig['class'] = data_orig['class'] - 1"],"metadata":{"id":"8vOR8B8e-R2Z","executionInfo":{"status":"ok","timestamp":1685874471021,"user_tz":-420,"elapsed":2,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"bb1b7fa8-4b20-4fa9-b1fc-eadac3ec7339"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-56ddbcb01184>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data_orig['class'] = data_orig['class'] - 1\n"]}]},{"cell_type":"code","source":["data_orig['class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XxvnFiK5-ZWq","executionInfo":{"status":"ok","timestamp":1685874471786,"user_tz":-420,"elapsed":2,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"abc5569b-6c46-4014-d3fb-c0fa371f722d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    50\n","1    50\n","Name: class, dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["data_orig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"bJyNb0OBCIgz","executionInfo":{"status":"ok","timestamp":1685874475100,"user_tz":-420,"elapsed":318,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"9661cdf3-e925-48a7-abaa-7eb58ed70c64"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw  class\n","50     1  7.0  3.2  4.7  1.4      0\n","51     1  6.4  3.2  4.5  1.5      0\n","52     1  6.9  3.1  4.9  1.5      0\n","53     1  5.5  2.3  4.0  1.3      0\n","54     1  6.5  2.8  4.6  1.5      0\n","..   ...  ...  ...  ...  ...    ...\n","145    1  6.7  3.0  5.2  2.3      1\n","146    1  6.3  2.5  5.0  1.9      1\n","147    1  6.5  3.0  5.2  2.0      1\n","148    1  6.2  3.4  5.4  2.3      1\n","149    1  5.9  3.0  5.1  1.8      1\n","\n","[100 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-139603c6-2829-45fc-90ed-01775ede9e40\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>1</td>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>1</td>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>4.5</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>1</td>\n","      <td>6.9</td>\n","      <td>3.1</td>\n","      <td>4.9</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>1</td>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-139603c6-2829-45fc-90ed-01775ede9e40')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-139603c6-2829-45fc-90ed-01775ede9e40 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-139603c6-2829-45fc-90ed-01775ede9e40');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Сделал копию подготовленного датафрейма для исследования логистической регрессии\n","# на нормализованных данных.\n","\n","df_copy = data_orig.copy(deep=True)"],"metadata":{"id":"x4nIjz7Q6Vsc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_copy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gJsFe9ni7Fxj","executionInfo":{"status":"ok","timestamp":1685874477379,"user_tz":-420,"elapsed":8,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"76c6a050-d795-4173-e7cc-100a0122d4bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw  class\n","50     1  7.0  3.2  4.7  1.4      0\n","51     1  6.4  3.2  4.5  1.5      0\n","52     1  6.9  3.1  4.9  1.5      0\n","53     1  5.5  2.3  4.0  1.3      0\n","54     1  6.5  2.8  4.6  1.5      0\n","..   ...  ...  ...  ...  ...    ...\n","145    1  6.7  3.0  5.2  2.3      1\n","146    1  6.3  2.5  5.0  1.9      1\n","147    1  6.5  3.0  5.2  2.0      1\n","148    1  6.2  3.4  5.4  2.3      1\n","149    1  5.9  3.0  5.1  1.8      1\n","\n","[100 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-2128b4c7-b1f8-4db0-9457-7957e3866812\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>1</td>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>1</td>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>4.5</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>1</td>\n","      <td>6.9</td>\n","      <td>3.1</td>\n","      <td>4.9</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>1</td>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2128b4c7-b1f8-4db0-9457-7957e3866812')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2128b4c7-b1f8-4db0-9457-7957e3866812 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2128b4c7-b1f8-4db0-9457-7957e3866812');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["#### Нормализация датафрейма df_copy."],"metadata":{"id":"2PyAWD_B7Uds"}},{"cell_type":"code","source":["df_norm = df_copy.copy(deep=True)"],"metadata":{"id":"krEFHXb-7cQL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_norm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Atusi-W58RcE","executionInfo":{"status":"ok","timestamp":1685874490372,"user_tz":-420,"elapsed":8,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"657656ed-1d9a-4f60-fe7e-1342b5afc45c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one   sl   sw   pl   pw  class\n","50     1  7.0  3.2  4.7  1.4      0\n","51     1  6.4  3.2  4.5  1.5      0\n","52     1  6.9  3.1  4.9  1.5      0\n","53     1  5.5  2.3  4.0  1.3      0\n","54     1  6.5  2.8  4.6  1.5      0\n","..   ...  ...  ...  ...  ...    ...\n","145    1  6.7  3.0  5.2  2.3      1\n","146    1  6.3  2.5  5.0  1.9      1\n","147    1  6.5  3.0  5.2  2.0      1\n","148    1  6.2  3.4  5.4  2.3      1\n","149    1  5.9  3.0  5.1  1.8      1\n","\n","[100 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-cab9f9ff-bf41-46e2-a7cd-d50fa929de7f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>1</td>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>1</td>\n","      <td>6.4</td>\n","      <td>3.2</td>\n","      <td>4.5</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>1</td>\n","      <td>6.9</td>\n","      <td>3.1</td>\n","      <td>4.9</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>1</td>\n","      <td>5.5</td>\n","      <td>2.3</td>\n","      <td>4.0</td>\n","      <td>1.3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cab9f9ff-bf41-46e2-a7cd-d50fa929de7f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cab9f9ff-bf41-46e2-a7cd-d50fa929de7f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cab9f9ff-bf41-46e2-a7cd-d50fa929de7f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Столбцы для стандартизации\n","df_norm_sta = df_norm[['sl', 'sw', 'pl', 'pw']]\n","\n","#standardize the values for each predictor variable\n","df_norm[['sl', 'sw', 'pl', 'pw']] = (df_norm_sta - df_norm_sta.mean())/df_norm_sta.std()"],"metadata":{"id":"aAqzk5jz7cTr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_norm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"KMPeDabp7cXT","executionInfo":{"status":"ok","timestamp":1685874670690,"user_tz":-420,"elapsed":352,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"9aa74954-21a1-4b30-afb6-f6716e5b7e44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     one        sl        sw        pl        pw  class\n","50     1  1.113400  0.985722 -0.249522 -0.649766      0\n","51     1  0.208197  0.985722 -0.491776 -0.414343      0\n","52     1  0.962533  0.685197 -0.007268 -0.414343      0\n","53     1 -1.149608 -1.719003 -1.097412 -0.885188      0\n","54     1  0.359064 -0.216378 -0.370649 -0.414343      0\n","..   ...       ...       ...       ...       ...    ...\n","145    1  0.660798  0.384672  0.356114  1.469035      1\n","146    1  0.057330 -1.117953  0.113860  0.527346      1\n","147    1  0.359064  0.384672  0.356114  0.762768      1\n","148    1 -0.093538  1.586772  0.598368  1.469035      1\n","149    1 -0.546139  0.384672  0.234987  0.291924      1\n","\n","[100 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-5cd6406e-cfc6-4226-8265-7d39fc674937\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>sl</th>\n","      <th>sw</th>\n","      <th>pl</th>\n","      <th>pw</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>1</td>\n","      <td>1.113400</td>\n","      <td>0.985722</td>\n","      <td>-0.249522</td>\n","      <td>-0.649766</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>1</td>\n","      <td>0.208197</td>\n","      <td>0.985722</td>\n","      <td>-0.491776</td>\n","      <td>-0.414343</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>1</td>\n","      <td>0.962533</td>\n","      <td>0.685197</td>\n","      <td>-0.007268</td>\n","      <td>-0.414343</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>1</td>\n","      <td>-1.149608</td>\n","      <td>-1.719003</td>\n","      <td>-1.097412</td>\n","      <td>-0.885188</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>1</td>\n","      <td>0.359064</td>\n","      <td>-0.216378</td>\n","      <td>-0.370649</td>\n","      <td>-0.414343</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>1</td>\n","      <td>0.660798</td>\n","      <td>0.384672</td>\n","      <td>0.356114</td>\n","      <td>1.469035</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>1</td>\n","      <td>0.057330</td>\n","      <td>-1.117953</td>\n","      <td>0.113860</td>\n","      <td>0.527346</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>1</td>\n","      <td>0.359064</td>\n","      <td>0.384672</td>\n","      <td>0.356114</td>\n","      <td>0.762768</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>1</td>\n","      <td>-0.093538</td>\n","      <td>1.586772</td>\n","      <td>0.598368</td>\n","      <td>1.469035</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>1</td>\n","      <td>-0.546139</td>\n","      <td>0.384672</td>\n","      <td>0.234987</td>\n","      <td>0.291924</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cd6406e-cfc6-4226-8265-7d39fc674937')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5cd6406e-cfc6-4226-8265-7d39fc674937 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5cd6406e-cfc6-4226-8265-7d39fc674937');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["#### Разделение датафрейма на обучающую и тестовую выборку."],"metadata":{"id":"kZTuVVMMxIIr"}},{"cell_type":"code","source":["# Разделение НЕ нормализованного датафрейма  на обучающий и тестовый наборы.\n","# random_state= 0 - Обеспечивает воспроизводимость случайности.\n","train = data_orig.sample(frac= 0.8 ,random_state= 0 )\n","test = data_orig.drop(train.index)"],"metadata":{"id":"6GUOnrrnCImT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Разделение нормализованного датафрейма  на обучающий и тестовый наборы.\n","train_norm = df_norm.sample(frac= 0.8 ,random_state= 0 )\n","test_norm = df_norm.drop(train.index)\n"],"metadata":{"id":"WITX491Q9qyM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Ещё вот так можно разделить датафрейм.\n","\n","# test = df.sample(20) - 20 - это 20% строк конкретно этого набора данных \n","\n","# train = df[~df.isin(test)]\n","# train.dropna(inplace = True)\n"],"metadata":{"id":"U9mT3GErnya2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# НЕ нормализованный\n","train.shape, test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0gIdlXYNCf_D","executionInfo":{"status":"ok","timestamp":1685874837646,"user_tz":-420,"elapsed":2,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"8fa89dc4-f9a4-4f1e-d4a0-bf08a0e64898"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((80, 6), (20, 6))"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# Нормализованный\n","train_norm.shape, test_norm.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jrIh5k-B-Bel","executionInfo":{"status":"ok","timestamp":1685874991737,"user_tz":-420,"elapsed":286,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"a1a14f61-280b-415c-ced3-fc1cee2d16c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((80, 6), (20, 6))"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# НЕ нормализованные данные\n","X_train = train[['one', 'sl', 'sw', 'pl', 'pw']].copy(); y_train = train['class']"],"metadata":{"id":"0-2x_-HiDI9H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Нормализованные данные\n","X_train_norm = train_norm[['one', 'sl', 'sw', 'pl', 'pw']].copy(); y_train_norm = train_norm['class']"],"metadata":{"id":"zhJ-pEuO-VY8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# НЕ нормализованные данные\n","y_train, X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XfVaaE_HDJAD","executionInfo":{"status":"ok","timestamp":1685874995619,"user_tz":-420,"elapsed":287,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"49b635a3-32c1-4a51-c6f8-0aa480f4674a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(76     0\n"," 136    1\n"," 52     0\n"," 105    1\n"," 125    1\n","       ..\n"," 119    1\n"," 70     0\n"," 144    1\n"," 122    1\n"," 127    1\n"," Name: class, Length: 80, dtype: int64,\n","      one   sl   sw   pl   pw\n"," 76     1  6.8  2.8  4.8  1.4\n"," 136    1  6.3  3.4  5.6  2.4\n"," 52     1  6.9  3.1  4.9  1.5\n"," 105    1  7.6  3.0  6.6  2.1\n"," 125    1  7.2  3.2  6.0  1.8\n"," ..   ...  ...  ...  ...  ...\n"," 119    1  6.0  2.2  5.0  1.5\n"," 70     1  5.9  3.2  4.8  1.8\n"," 144    1  6.7  3.3  5.7  2.5\n"," 122    1  7.7  2.8  6.7  2.0\n"," 127    1  6.1  3.0  4.9  1.8\n"," \n"," [80 rows x 5 columns])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["# Нормализованные данные\n","y_train_norm, X_train_norm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nChjSfmM-h4m","executionInfo":{"status":"ok","timestamp":1685875121122,"user_tz":-420,"elapsed":301,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"b2aaa3f7-564a-4fe9-cfd8-156a412dfd1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(76     0\n"," 136    1\n"," 52     0\n"," 105    1\n"," 125    1\n","       ..\n"," 119    1\n"," 70     0\n"," 144    1\n"," 122    1\n"," 127    1\n"," Name: class, Length: 80, dtype: int64,\n","      one        sl        sw        pl        pw\n"," 76     1  0.811666 -0.216378 -0.128395 -0.649766\n"," 136    1  0.057330  1.586772  0.840623  1.704458\n"," 52     1  0.962533  0.685197 -0.007268 -0.414343\n"," 105    1  2.018604  0.384672  2.051895  0.998191\n"," 125    1  1.415135  0.985722  1.325131  0.291924\n"," ..   ...       ...       ...       ...       ...\n"," 119    1 -0.395272 -2.019528  0.113860 -0.414343\n"," 70     1 -0.546139  0.985722 -0.128395  0.291924\n"," 144    1  0.660798  1.286247  0.961750  1.939880\n"," 122    1  2.169471 -0.216378  2.173022  0.762768\n"," 127    1 -0.244405  0.384672 -0.007268  0.291924\n"," \n"," [80 rows x 5 columns])"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Отличное разделение на обучающую и тестовую выбрку.\n","# Целевая переменная, тип цветков , разделилась точно пополам.\n","y_train.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"awAq7fQvE4Wr","executionInfo":{"status":"ok","timestamp":1685875122596,"user_tz":-420,"elapsed":283,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"22a94a89-6ffc-4c7e-b8b3-1f79c2a8699b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    40\n","1    40\n","Name: class, dtype: int64"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# НЕ нормализованные данные\n","X_test = test[['one', 'sl', 'sw', 'pl', 'pw']].copy(); y_test = test['class']"],"metadata":{"id":"1eKDCHcBEkTb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Нормализованные данные\n","X_test_norm = test_norm[['one', 'sl', 'sw', 'pl', 'pw']].copy(); y_test_norm = test_norm['class']"],"metadata":{"id":"w1OlvAov-6dz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# НЕ нормализованные данные\n","y_test, X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9B-z-h4uEkXX","executionInfo":{"status":"ok","timestamp":1685875128817,"user_tz":-420,"elapsed":3,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"909cd568-1f52-4ea3-c53e-c7a1c396f8da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59     0\n"," 62     0\n"," 71     0\n"," 75     0\n"," 86     0\n"," 87     0\n"," 89     0\n"," 94     0\n"," 96     0\n"," 97     0\n"," 108    1\n"," 114    1\n"," 115    1\n"," 117    1\n"," 120    1\n"," 131    1\n"," 133    1\n"," 137    1\n"," 138    1\n"," 146    1\n"," Name: class, dtype: int64,\n","      one   sl   sw   pl   pw\n"," 59     1  5.2  2.7  3.9  1.4\n"," 62     1  6.0  2.2  4.0  1.0\n"," 71     1  6.1  2.8  4.0  1.3\n"," 75     1  6.6  3.0  4.4  1.4\n"," 86     1  6.7  3.1  4.7  1.5\n"," 87     1  6.3  2.3  4.4  1.3\n"," 89     1  5.5  2.5  4.0  1.3\n"," 94     1  5.6  2.7  4.2  1.3\n"," 96     1  5.7  2.9  4.2  1.3\n"," 97     1  6.2  2.9  4.3  1.3\n"," 108    1  6.7  2.5  5.8  1.8\n"," 114    1  5.8  2.8  5.1  2.4\n"," 115    1  6.4  3.2  5.3  2.3\n"," 117    1  7.7  3.8  6.7  2.2\n"," 120    1  6.9  3.2  5.7  2.3\n"," 131    1  7.9  3.8  6.4  2.0\n"," 133    1  6.3  2.8  5.1  1.5\n"," 137    1  6.4  3.1  5.5  1.8\n"," 138    1  6.0  3.0  4.8  1.8\n"," 146    1  6.3  2.5  5.0  1.9)"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["# Нормализованные данные\n","y_test_norm, X_test_norm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MfDfyij5_LXk","executionInfo":{"status":"ok","timestamp":1685875148349,"user_tz":-420,"elapsed":293,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"96651efc-6da7-4137-d82d-2f1fde973bc9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59     0\n"," 62     0\n"," 71     0\n"," 75     0\n"," 86     0\n"," 87     0\n"," 89     0\n"," 94     0\n"," 96     0\n"," 97     0\n"," 108    1\n"," 114    1\n"," 115    1\n"," 117    1\n"," 120    1\n"," 131    1\n"," 133    1\n"," 137    1\n"," 138    1\n"," 146    1\n"," Name: class, dtype: int64,\n","      one        sl        sw        pl        pw\n"," 59     1 -1.602210 -0.516903 -1.218540 -0.649766\n"," 62     1 -0.395272 -2.019528 -1.097412 -1.591455\n"," 71     1 -0.244405 -0.216378 -1.097412 -0.885188\n"," 75     1  0.509931  0.384672 -0.612904 -0.649766\n"," 86     1  0.660798  0.685197 -0.249522 -0.414343\n"," 87     1  0.057330 -1.719003 -0.612904 -0.885188\n"," 89     1 -1.149608 -1.117953 -1.097412 -0.885188\n"," 94     1 -0.998741 -0.516903 -0.855158 -0.885188\n"," 96     1 -0.847874  0.084147 -0.855158 -0.885188\n"," 97     1 -0.093538  0.084147 -0.734031 -0.885188\n"," 108    1  0.660798 -1.117953  1.082877  0.291924\n"," 114    1 -0.697007 -0.216378  0.234987  1.704458\n"," 115    1  0.208197  0.985722  0.477241  1.469035\n"," 117    1  2.169471  2.788872  2.173022  1.233613\n"," 120    1  0.962533  0.985722  0.961750  1.469035\n"," 131    1  2.471205  2.788872  1.809640  0.762768\n"," 133    1  0.057330 -0.216378  0.234987 -0.414343\n"," 137    1  0.208197  0.685197  0.719496  0.291924\n"," 138    1 -0.395272  0.384672 -0.128395  0.291924\n"," 146    1  0.057330 -1.117953  0.113860  0.527346)"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["#### Определение функций."],"metadata":{"id":"XjqnlWkUxT_k"}},{"cell_type":"markdown","source":["Источник:</br>\n","https://colab.research.google.com/drive/1X1snkbB93q2Egy7PQHoXAA3FLIeKelX5#scrollTo=qPe_CIdRvPcI\n","</br>\n","</br>\n","Реализуем функцию:\n","1. logloss - функция логистической функции потерь (cross entropy) $logloss = - \\frac{1}{n}\\sum (y_i \\cdot log(p_i) + (1-y_i) \\cdot log(1 - p_i))$\n","\n","\n","2. gr_logloss - градиент функции logloss записанные в матричном виде. $X^{T}(\\sigma(XW)-Y)$\n","\n","\n","Если интересно, как он получился, дайте мне знать в комментариях к видео."],"metadata":{"id":"Ve6fzYpv8NvB"}},{"cell_type":"code","source":["# Источник: https://colab.research.google.com/drive/10mXvep_YqumQXTEah_Lyl0qtuBdgQb1y#scrollTo=_GlN3Fb4CPlC\n","# Определение функций\n","\n","\n","def sigmoid(x):\n","    return 1 / (1 + np.exp(-x))\n","\n","\n","def logloss(y, y_proba):\n","    logloss_1 = np.sum(np.log(y_proba[y == 1] + 1e-30))\n","    logloss_0 = np.sum(np.log(1 - y_proba[y == 0] + 1e-30))\n","    logloss_total = -(logloss_0 + logloss_1) / len(y)\n","    return logloss_total\n","\n","\n","def gr_logloss(X, W, y):\n","    y_proba = sigmoid(X @ W)\n","    grad = X.T @ (y_proba - y)\n","    return grad\n"],"metadata":{"id":"h2XZb_0XEkbL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Добавил импорт библиотеки Generator которая более \n","# свежая.\n","from numpy.random import Generator, PCG64\n","\n","# установка минимального значения, на которое должны изменяться веса\n","eps = 0.0001\n","\n","# первоначальное точка\n","# np.random.seed(9)\n","# W = np.random.randn(X.shape[1])\n","\n","rng = Generator(PCG64(seed=42))\n","W = rng.standard_normal(X_train.shape[1])\n","\n","# размер шага (learning rate)\n","learning_rate = 0.001\n","\n","next_W = W\n","\n","# количество итерация \n","n = 500\n","for i in range(n):\n","    cur_W = next_W\n","\n","    # движение в негативную сторону вычисляемого градиента\n","    next_W = cur_W - learning_rate * gr_logloss(X_train, W, y_train)\n","\n","    # остановка когда достигнута необходимая степень точности\n","    if np.linalg.norm(cur_W - next_W) <= eps:\n","        break\n","\n","    if i % 80 == 0:\n","        print(f\"Итерация: {i}\")\n","        # print(f\"Текущая точка {cur_W}| Следующая точка {next_W}\")\n","        y_proba = sigmoid(X_train @ next_W)\n","        y_class = np.where(y_proba >= 0.5, 1, 0)\n","        # Точность представляет собой просто отношение\n","        # правильно предсказанного наблюдения к общему количеству наблюдений.\n","        accuracy = (y_class == y_train).sum() / len(y_train)\n","        print(f\"Logloss {logloss(y_train, y_proba)}\")\n","        print(f\"Accuracy {accuracy}\")\n","        print(\"--------------------------------------------------------\")  \n","\n"],"metadata":{"id":"qyOwUsWZyCrz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685875186511,"user_tz":-420,"elapsed":1368,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"ca7467b2-cadb-4275-f2a6-8f702fbc0f03"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Итерация: 0\n","Logloss 0.7799304302200956\n","Accuracy 0.325\n","--------------------------------------------------------\n","Итерация: 80\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n","Итерация: 160\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n","Итерация: 240\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n","Итерация: 320\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n","Итерация: 400\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n","Итерация: 480\n","Logloss 34.538776394910684\n","Accuracy 0.5\n","--------------------------------------------------------\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"smJhwuVS8dCg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Добавил импорт библиотеки Generator которая более \n","# свежая.\n","from numpy.random import Generator, PCG64\n","\n","# установка минимального значения, на которое должны изменяться веса\n","eps = 0.0001\n","\n","# первоначальное точка\n","# np.random.seed(9)\n","# W = np.random.randn(X.shape[1])\n","\n","rng = Generator(PCG64(seed=42))\n","W = rng.standard_normal(X_train_norm.shape[1])\n","\n","# размер шага (learning rate)\n","learning_rate = 0.001\n","\n","next_W = W\n","\n","# количество итерация \n","n = 600\n","for i in range(n):\n","    cur_W = next_W\n","\n","    # движение в негативную сторону вычисляемого градиента\n","    next_W = cur_W - learning_rate * gr_logloss(X_train_norm, W, y_train_norm)\n","\n","    # остановка когда достигнута необходимая степень точности\n","    if np.linalg.norm(cur_W - next_W) <= eps:\n","        break\n","\n","    if i % 80 == 0:\n","        print(f\"Итерация: {i}\")\n","        # print(f\"Текущая точка {cur_W}| Следующая точка {next_W}\")\n","        y_proba = sigmoid(X_train_norm @ next_W)\n","        y_class = np.where(y_proba >= 0.5, 1, 0)\n","        # Точность представляет собой просто отношение\n","        # правильно предсказанного наблюдения к общему количеству наблюдений.\n","        accuracy = (y_class == y_train_norm).sum() / len(y_train_norm)\n","        print(f\"Logloss {logloss(y_train_norm, y_proba)}\")\n","        print(f\"Accuracy {accuracy}\")\n","        print(\"--------------------------------------------------------\")  \n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685876757372,"user_tz":-420,"elapsed":1228,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"fc859701-6fda-4ec0-961c-d8355c684e3a","id":"eQspgHCY_hej"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Итерация: 0\n","Logloss 1.4813479124905748\n","Accuracy 0.1375\n","--------------------------------------------------------\n","Итерация: 80\n","Logloss 0.4058461413846496\n","Accuracy 0.8375\n","--------------------------------------------------------\n","Итерация: 160\n","Logloss 0.6439424932206751\n","Accuracy 0.85\n","--------------------------------------------------------\n","Итерация: 240\n","Logloss 0.909908032812494\n","Accuracy 0.8625\n","--------------------------------------------------------\n","Итерация: 320\n","Logloss 1.182074316658416\n","Accuracy 0.8625\n","--------------------------------------------------------\n","Итерация: 400\n","Logloss 1.4564574133035304\n","Accuracy 0.8625\n","--------------------------------------------------------\n","Итерация: 480\n","Logloss 1.732126944173999\n","Accuracy 0.875\n","--------------------------------------------------------\n","Итерация: 560\n","Logloss 2.0083768765544034\n","Accuracy 0.875\n","--------------------------------------------------------\n"]}]},{"cell_type":"markdown","source":["### Вариант 3. Реализация в виде класса."],"metadata":{"id":"6MZq7BejTLxK"}},{"cell_type":"code","source":["\"\"\"\n","   \n","\"\"\"\n","import numpy as np\n","from sklearn.metrics import accuracy_score\n","\n","class SLR(object):\n","    \"\"\"\n","    Класс логистической регрессии.\n","    Применяется сигмовидная ф-ция.\n","    Дата создания:\n","    05 июня 2023 года\n","    Версия:\n","    0.1.1\n","    \"\"\"\n","\n","    def __init__(self, learning_rate=10e-4, nit=600, cutoff=0.5):\n","        \"\"\"\n","        Метод инициализации __init__ \n","        Параметры:\n","            learning_rate - размер шага (скорости обучения)\n","            nit - число итераций \n","            cutoff - отсечка \n","        \"\"\"\n","        self.learning_rate = learning_rate\n","        self.nit = nit\n","        self.cutoff = cutoff\n","\n","        self.w = None\n","        self.b = 0.0\n","    def __str__(self):\n","        return f'Класс реализующий логистическую \\\n","регрессию в учебных целях.\\nСкорость обучения: {self.learning_rate}\\\n","\\nЧисло итераций: {self.nit}\\\n","\\nОтсечка (разделение на классы): {self.cutoff}'\n","\n","    def __repr__(self):\n","        params = {\n","            'learning_rate': self.learning_rate,\n","            'nit': self.nit,\n","            'cutoff': self.cutoff\n","        }\n","        return \"SLR({0}={3}, {1}={4}, {2}={5})\".format(*params.keys(), *params.values())\n","\n","    def sigmoid(self, x):\n","        \"\"\"\n","        Логистическая функция (в данной работе это сигмовидная ф-ция):\n","        Param:\n","            x\n","        Return:\n","            1.0 / (1.0 + exp(-x))\n","        \"\"\"\n","        return 1.0 / (1.0 + np.exp(-z))\n","\n","    def predict_proba(self, row):\n","        \"\"\"\n","        The predict_proba\n","        Param:\n","            row\n","        Return:\n","            sigmoid(z)\n","        \"\"\"\n","        z = np.dot(row, self.w) + self.b\n","        return self.sigmoid(z)\n","\n","    def predict(self, X):\n","        if not isinstance(X, np.ndarray):\n","            X = X.to_numpy()\n","\n","        self.predict_probas = []\n","        for i in range(X.shape[0]):\n","            ypred = self.predict_proba(X[i])\n","            self.predict_probas.append(ypred)\n","\n","        return (np.array(self.predict_probas) >= self.cutoff) * 1.0\n","\n","    def score(self, X, y):\n","        \"\"\"\n","        The score method\n","        Param\n","            X, y\n","        Return\n","            accuracy_score(y, ypred)\n","        \"\"\"\n","        ypred = self.predict(X)\n","        y = y.to_numpy()\n","        return accuracy_score(y, ypred)\n","\n","    def fit(self, X, y):\n","        \"\"\"\n","        The fit method implement stochastic gradient descent\n","        Param\n","            X, y\n","        Return\n","            None\n","        \"\"\"\n","        if not isinstance(X, np.ndarray):\n","            X = X.to_numpy()\n","\n","        if not isinstance(y, np.ndarray):\n","            y = y.to_numpy()\n","\n","        self.w = np.zeros(X.shape[1])\n","        self.cost = []\n","\n","        self.m = X.shape[0]\n","        self.log_loss = {}\n","        self.cost = []\n","\n","        for n_epoch in range(1, self.n_epochs + 1):\n","            losses = []\n","            for i in range(self.m):\n","                yhat = self.predict_proba(X[i])\n","                grad_b = yhat - y[i]\n","                grad_w =  X[i] * (yhat - y[i])\n","\n","                self.w -= self.learning_rate * grad_w / self.m\n","                self.b -= self.learning_rate * grad_b / self.m\n","                loss = -1/self.m * (y[i] * np.log(yhat) + (1 - y[i]) * np.log(1 - yhat))\n","                losses.append(loss)\n","\n","            self.cost.append(sum(losses))"],"metadata":{"id":"9dEpDO0JTQMC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a = SLR()"],"metadata":{"id":"B_HOvLZrp5nA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(str(a))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xjjtN-gAp_V9","executionInfo":{"status":"ok","timestamp":1685970836578,"user_tz":-420,"elapsed":2,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"58bee0a8-5142-46ab-fb0b-d6c16d4ff2ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Класс реализующий логистическую регрессию в учебных целях.\n","Скорость обучения: 0.001\n","Число итераций: 600\n","Отсечка (разделение на классы): 0.5\n"]}]},{"cell_type":"code","source":["print(SLR.sigmoid.__doc__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjnqFfdeeVKE","executionInfo":{"status":"ok","timestamp":1685967767012,"user_tz":-420,"elapsed":302,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"f41e9b99-e498-4341-9ad3-e33409409740"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","        Логистическая функция (в данной работе это сигмовидная ф-ция):\n","        Param:\n","            x\n","        Return:\n","            1.0 / (1.0 + exp(-x))\n","        \n"]}]},{"cell_type":"code","source":["print(SLR.__doc__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PvaSQSySefMz","executionInfo":{"status":"ok","timestamp":1685969881751,"user_tz":-420,"elapsed":299,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"fb32fb2b-bc13-4a6e-eadc-3486ed73e97e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","    Класс логистической регрессии.\n","    Применяется сигмовидная ф-ция.\n","    Дата создания:\n","    05 июня 2023 года\n","    Версия:\n","    0.1.1\n","    \n"]}]},{"cell_type":"code","source":["dir(SLR)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EjFPXgN_oy4m","executionInfo":{"status":"ok","timestamp":1685969910247,"user_tz":-420,"elapsed":318,"user":{"displayName":"Игорь Рудых","userId":"07807333803977163631"}},"outputId":"e959d060-2959-4a57-c79f-9ff8ad1a79c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['__class__',\n"," '__delattr__',\n"," '__dict__',\n"," '__dir__',\n"," '__doc__',\n"," '__eq__',\n"," '__format__',\n"," '__ge__',\n"," '__getattribute__',\n"," '__gt__',\n"," '__hash__',\n"," '__init__',\n"," '__init_subclass__',\n"," '__le__',\n"," '__lt__',\n"," '__module__',\n"," '__ne__',\n"," '__new__',\n"," '__reduce__',\n"," '__reduce_ex__',\n"," '__repr__',\n"," '__setattr__',\n"," '__sizeof__',\n"," '__str__',\n"," '__subclasshook__',\n"," '__weakref__',\n"," 'fit',\n"," 'predict',\n"," 'predict_proba',\n"," 'score',\n"," 'sigmoid']"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":[],"metadata":{"id":"ifAmw8Ida1Zk"},"execution_count":null,"outputs":[]}]}